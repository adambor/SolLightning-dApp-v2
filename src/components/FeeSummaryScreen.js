import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { FromBTCLNSwap, FromBTCSwap, IToBTCSwap } from "sollightning-sdk";
import { getCurrencySpec, getNativeCurrency, toHumanReadableString } from "../utils/Currencies";
export function FeeSummaryScreen(props) {
    if (props.swap instanceof IToBTCSwap) {
        const currency = getCurrencySpec(props.swap.getToken());
        return (_jsxs("div", Object.assign({ className: props.className }, { children: [_jsxs("div", Object.assign({ className: "d-flex my-2" }, { children: [_jsx("span", { children: "Amount:" }), _jsxs("span", Object.assign({ className: "ms-auto" }, { children: [toHumanReadableString(props.swap.getInAmountWithoutFee(), currency), " ", currency.ticker] }))] })), _jsxs("div", Object.assign({ className: "d-flex my-2" }, { children: [_jsx("span", { children: "Swap fee:" }), _jsxs("span", Object.assign({ className: "ms-auto" }, { children: [toHumanReadableString(props.swap.getSwapFee(), currency), " ", currency.ticker] }))] })), _jsxs("div", Object.assign({ className: "d-flex my-2" }, { children: [_jsx("span", { children: "Network fee:" }), _jsxs("span", Object.assign({ className: "ms-auto" }, { children: [toHumanReadableString(props.swap.getNetworkFee(), currency), " ", currency.ticker] }))] })), _jsxs("div", Object.assign({ className: "d-flex fw-bold border-top border-light font-bigger" }, { children: [_jsx("span", { children: "Total:" }), _jsxs("span", Object.assign({ className: "ms-auto" }, { children: [_jsx("img", { src: currency.icon, className: "currency-icon-small" }), toHumanReadableString(props.swap.getInAmount(), currency), " ", currency.ticker] }))] }))] })));
    }
    if (props.swap instanceof FromBTCSwap) {
        const currency = getCurrencySpec(props.swap.getToken());
        return (_jsxs("div", Object.assign({ className: props.className }, { children: [_jsxs("div", Object.assign({ className: "d-flex my-2" }, { children: [_jsx("span", { children: "Amount:" }), _jsxs("span", Object.assign({ className: "ms-auto" }, { children: [toHumanReadableString(props.swap.getOutAmountWithoutFee(), currency), " ", currency.ticker] }))] })), _jsxs("div", Object.assign({ className: "d-flex my-2" }, { children: [_jsx("span", { children: "Swap fee:" }), _jsxs("span", Object.assign({ className: "ms-auto" }, { children: [toHumanReadableString(props.swap.getFee(), currency), " ", currency.ticker] }))] })), _jsxs("div", Object.assign({ className: "d-flex my-2" }, { children: [_jsx("span", { children: "Watchtower fee:" }), _jsxs("span", Object.assign({ className: "ms-auto" }, { children: [toHumanReadableString(props.swap.getClaimerBounty(), getNativeCurrency()), " ", getNativeCurrency().ticker] }))] })), _jsxs("div", Object.assign({ className: "d-flex fw-bold border-top border-light font-bigger" }, { children: [_jsx("span", { children: "Total:" }), _jsxs("span", Object.assign({ className: "ms-auto" }, { children: [_jsx("img", { src: currency.icon, className: "currency-icon-small" }), toHumanReadableString(props.swap.getOutAmount(), currency), " ", currency.ticker] }))] }))] })));
    }
    if (props.swap instanceof FromBTCLNSwap) {
        const currency = getCurrencySpec(props.swap.getToken());
        const isApproximate = props.swap.data.getAmount() == null;
        return (_jsxs("div", Object.assign({ className: props.className }, { children: [_jsxs("div", Object.assign({ className: "d-flex my-2" }, { children: [_jsx("span", { children: "Amount:" }), _jsxs("span", Object.assign({ className: "ms-auto" }, { children: [isApproximate ? "~" : "", toHumanReadableString(props.swap.getOutAmountWithoutFee(), currency), " ", currency.ticker] }))] })), _jsxs("div", Object.assign({ className: "d-flex my-2" }, { children: [_jsx("span", { children: "Swap fee:" }), _jsxs("span", Object.assign({ className: "ms-auto" }, { children: [toHumanReadableString(props.swap.getFee(), currency), " ", currency.ticker] }))] })), _jsxs("div", Object.assign({ className: "d-flex fw-bold border-top border-light font-bigger" }, { children: [_jsx("span", { children: "Total:" }), _jsxs("span", Object.assign({ className: "ms-auto" }, { children: [_jsx("img", { src: currency.icon, className: "currency-icon-small" }), isApproximate ? "~" : "", toHumanReadableString(props.swap.getOutAmount(), currency), " ", currency.ticker] }))] }))] })));
    }
    return (_jsxs("div", Object.assign({ className: props.className }, { children: [_jsxs("div", Object.assign({ className: "d-flex my-2" }, { children: [_jsx("span", { children: "Amount:" }), _jsx("span", Object.assign({ className: "ms-auto" }, { children: "0.02736 SOL" }))] })), _jsxs("div", Object.assign({ className: "d-flex my-2" }, { children: [_jsx("span", { children: "Swap fee:" }), _jsx("span", Object.assign({ className: "ms-auto" }, { children: "0.00026 SOL" }))] })), _jsxs("div", Object.assign({ className: "d-flex my-2" }, { children: [_jsx("span", { children: "Network fee:" }), _jsx("span", Object.assign({ className: "ms-auto" }, { children: "0.00036 SOL" }))] })), _jsxs("div", Object.assign({ className: "d-flex fw-bold" }, { children: [_jsx("span", { children: "Total:" }), _jsx("span", Object.assign({ className: "ms-auto" }, { children: "0.02987 SOL" }))] }))] })));
}
